{"meta":{"title":"秀恩爱可能不好","subtitle":"","description":"","author":"jilin7105","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"聊聊ua","slug":"聊聊ua","date":"2020-08-12T02:55:17.000Z","updated":"2020-08-12T08:36:12.073Z","comments":true,"path":"/","link":"","permalink":"http://yoursite.com/","excerpt":"","text":"User-Agent============= 1. 背景介绍最近公司在渠道广告推广过程中，遇到了一个问题，就是ip+ua匹配率很低。 之所以匹配率低是因为，我们使用整个ua进行匹配。由于用户手机中不同app使用的浏览器的内核不同，或者不同app增加的ua个性化标示不同，导致ua无法匹配成功。 2. 什么是uaUser Agent中文名为用户代理，是Http协议中的一部分，属于头域的组成部分，User Agent也简称UA 3. ua里面有什么 User-Agent: Mozilla/version (system-information) platform (platform-details) extensions 浏览器标识 (操作系统标识; 加密等级标识; 浏览器语言) 渲染引擎标识版本信息 Mozilla/5.0 (iPhone; CPU iPhone OS 13_5_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Safari/605.1.15 //本人电脑 safari ua Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36 //本人电脑 Chrome ua Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:72.0) Gecko/20100101 Firefox/72.0 //本人电脑 Firefox ua 上面是我们获取到的一个ios手机的ua Mozilla/5.0 是一个通用标记符号，用来表示与 Mozilla 兼容，这几乎是现代浏览器的标配。 platform = AppleWebKit/605.1.15 用来说明浏览器所运行的原生系统平台,也代指渲染引擎，手机内置的浏览器用的就是AppleWebKit为内核开发的浏览器（大部分安卓手机也用使用这个苹果浏览器内核） system-information = (iPhone; CPU iPhone OS 13_5_1 like Mac OS X) 这里包含了 iphone 平台系统信息 CPU iPhone OS 13_5_1 操作系统信息 KHTML, like Gecko 说明信息 类似Gecko内核 Chrome/84.0.4147.105 浏览器/版本信息 4. 不变的信息由此我们大体估计出不变的信息为(Macintosh; Intel Mac OS X 10_15_4)这一段，虽然每个浏览器情况可能不一样 其中 Macintosh一般指MAC 也就是平台 Intel Mac OS X 10_15_4 是指 操作系统。 当然这是 苹果手机和浏览器的情况 5. 安卓手机ua查看123Yidui-Android-Mozilla&#x2F;5.0 (Linux; Android 8.1.0; vivo Y85A Build&#x2F;OPM1.171019.011; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;62.0.3202.84 Mobile Safari&#x2F;537.36Dalvik&#x2F;2.1.0 (Linux; U; Android 8.1.0; vivo Y85A Build&#x2F;OPM1.171019.011) 123Mozilla&#x2F;5.0 (Linux; Android 8.1.0; V1818A Build&#x2F;OPM1.171019.026; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;62.0.3202.84 Mobile Safari&#x2F;537.36Dalvik&#x2F;2.1.0 (Linux; U; Android 8.1.0; V1818A Build&#x2F;OPM1.171019.026) 123Yidui-Android-Mozilla&#x2F;5.0 (Linux; Android 9; HMA-AL00 Build&#x2F;HUAWEIHMA-AL00; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;74.0.3729.136 Mobile Safari&#x2F;537.36Mozilla&#x2F;5.0 (Linux; Android 9; HMA-AL00 Build&#x2F;HUAWEIHMA-AL00; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;75.0.3770.156 Mobile Safari&#x2F;537.36 1234Mozilla&#x2F;5.0 (Linux; Android 6.0; HL2001 Build&#x2F;MRA58K; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;77.0.3865.120 MQQBrowser&#x2F;6.2 TBS&#x2F;045230 Mobile Safari&#x2F;537.36 V1_AND_SQ_8.3.3_1376_YYB_D QQ&#x2F;8.3.3.4515 NetType&#x2F;4G WebP&#x2F;0.3.0 Pixel&#x2F;720 StatusBarHeight&#x2F;49 SimpleUISwitch&#x2F;0 QQTheme&#x2F;1000Mozilla&#x2F;5.0 (Linux; Android 6.0; HL2001 Build&#x2F;MRA58K; wv) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Version&#x2F;4.0 Chrome&#x2F;44.0.2403.119 Mobile Safari&#x2F;537.36 根据查看安卓手机的ua 来看，其同一个设备请求时，其中相同的信息也只有(Linux; Android 6.0; HL2001 Build/MRA58K; wv) 这一部分 6. 定义解决方案由于全等的匹配率较低，所以预期采取通过ua中，平台信息，操作系统信息，设备编号 三个信息进行匹配提高匹配率 即 例如:Linux == LinuxAndroid 6.0 = Android 6.0HL2001 Build/MRA58K = HL2001 Build/MRA58K 并且ip相同 192.168.0.134 = 192.168.0.134 ，此时定义为同一个设备 7. 奇奇怪怪的知识的补充KHTML, like Gecko 这个是什么？ Chrome 希望能得到为Safari编写的网页，于是决定装成Safari，Safari使用了WebKit渲染引擎，而WebKit呢又伪装自己是KHTML，KHTML呢又是伪装成Gecko的。同时所有的浏览器又都宣称自己是Mozilla。 故事还得从头说起，最初的主角叫NCSA Mosaic，简称Mosaic（马赛克），是1992年末位于伊利诺伊大学厄巴纳-香槟分校的国家超级计算机应用中心（National Center for Supercomputing Applications，简称NCSA）开发，并于1993年发布的一款浏览器。它自称“NCSA_Mosaic/2.0（Windows 3.1）”，Mosaic可以同时展示文字和图片，从此浏览器变得有趣多了。然而很快就出现了另一个浏览器，这就是著名的Mozilla，中文名称摩斯拉。一说 Mozilla = Mosaic + Killer，意为Mosaic杀手，也有说法是 Mozilla = Mosaic &amp; Godzilla，意为马赛克和哥斯拉，而Mozilla最初的吉祥物是只绿色大蜥蜴，后来更改为红色暴龙，跟哥斯拉长得一样。 但Mosaic对此非常不高兴，于是后来Mozilla更名为Netscape，也就是网景。Netscape自称“Mozilla/1.0(Win3.1)”，事情开始变得更加有趣。网景支持框架（frame），由于大家的喜欢框架变得流行起来，但是Mosaic不支持框架，于是网站管理员探测user agent，对Mozilla浏览器发送含有框架的页面，对非Mozilla浏览器发送没有框架的页面。 后来网景拿微软寻开心，称微软的Windows是“没有调试过的硬件驱动程序”。微软很生气，后果很严重。此后微软开发了自己的浏览器，这就是Internet Explorer，并希望它可以成为Netscape Killer。IE同样支持框架，但它不是Mozilla，所以它总是收不到含有框架的页面。微软很郁闷很快就沉不住气了，它不想等到所有的网站管理员都了解IE并且给IE发送含有框架的页面，它选择宣布IE是兼容Mozilla，并且模仿Netscape称IE为“Mozilla/1.22(compatible; MSIE 2.0; Windows 95)”，于是IE可以收到含有框架的页面了，所有微软的人都嗨皮了，但是网站管理员开始晕了。 因为微软将IE和Windows捆绑销售，并且把IE做得比Netscape更好，于是第一次浏览器血腥大战爆发了，结果是Netscape以失败退出历史舞台，微软更加嗨皮。但没想到Netscape居然以Mozilla的名义重生了，并且开发了Gecko，这次它自称为“Mozilla/5.0(Windows; U; Windows NT 5.0; en-US; rv:1.1) Gecko/20020826”。Gecko是一款渲染引擎并且很出色。Mozilla后来变成了Firefox，并自称“Mozilla/5.0 (Windows; U; Windows NT 5.1; sv-SE; rv:1.7.5) Gecko/20041108 Firefox/1.0”。Firefox性能很出色，Gecko也开始攻城略地，其他新的浏览器使用了它的代码，并且将它们自己称为“Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7.2) Gecko/20040825 Camino/0.8.1”，以及“Mozilla/5.0 (Windows; U; Windows NT 5.1; de; rv:1.8.1.8) Gecko/20071008 SeaMonkey/1.0”，每一个都将自己装作Mozilla，而它们全都使用Gecko。 Gecko很出色，而IE完全跟不上它，因此user agent探测规则变了，使用Gecko的浏览器被发送了更好的代码，而其他浏览器则没有这种待遇。Linux的追随者对此很难过，因为他们编写了Konqueror，它的引擎是KHTML，他们认为KHTML和Gecko一样出色，但却因为不是Gecko而得不到好的页面，于是Konqueror为得到更好的页面开始将自己伪装成“like Gecko”，并自称为“Mozilla/5.0 (compatible; Konqueror/3.2; FreeBSD) (KHTML, like Gecko)”。自此user agent变得更加混乱。 这时更有Opera跳出来说“毫无疑问，我们应该让用户来决定他们想让我们伪装成哪个浏览器。”于是Opera干脆创建了菜单项让用户自主选择让Opera浏览器变成“Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; en) Opera 9.51”，或者“Mozilla/5.0 (Windows NT 6.0; U; en; rv:1.8.1) Gecko/20061208 Firefox/2.0.0 Opera 9.51”， 或者“Opera/9.51 (Windows NT 5.1; U; en)”。 后来苹果开发了Safari浏览器，并使用KHTML作为渲染引擎，但苹果加入了许多新的特性，于是苹果从KHTML另辟分支称之为WebKit，但它又不想抛弃那些为KHTML编写的页面，于是Safari自称为“Mozilla/5.0 (Macintosh; U; PPC Mac OS X; de-de) AppleWebKit/85.7 (KHTML, like Gecko) Safari/85.5”，这进一步加剧了user agent的混乱局面。因为微软十分忌惮Firefox，于是IE重装上阵，这次它自称为“Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0) ”，并且渲染效果同样出色，但是需要网站管理员的指令它这么做才行。 再后来，谷歌开发了Chrome浏览器，Chrome使用Webkit作为渲染引擎，和Safari之前一样，它想要那些为Safari编写的页面，于是它伪装成了Safari。于是Chrome使用WebKit，并将自己伪装成Safari，WebKit伪装成KHTML，KHTML伪装成Gecko，最后所有的浏览器都伪装成了Mozilla，这就是为什么所有的浏览器User-Agent里都有Mozilla。Chrome自称为“Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US) AppleWebKit/525.13 (KHTML, like Gecko) Chrome/0.2.149.27 Safari/525.13”。因为以上这段历史，现在的User-Agent字符串变得一团糟，几乎根本无法彰显它最初的意义。追根溯源，微软可以说是这一切的始作俑者，但后来每一个人都在试图假扮别人，最终把User-Agent搞得混乱不堪。 一句话结论：因为网站开发者可能会因为你是某浏览器（这里是 Mozilla），所以输出一些特殊功能的程序代码（这里指好的特殊功能），所以当其它浏览器也支持这种好功能时，就试图去模仿 Mozilla 浏览器让网站输出跟 Mozilla 一样的内容，而不是输出被阉割功能的程序代码。大家都为了让网站输出最好的内容，都试图假装自己是 Mozilla 一个已经不存在的浏览器…… 附各大浏览器诞生年表：1993年1月23日：Mosaic1994年12月：Netscape1994年：Opera1995年8月16日：Internet Explorer1996年10月14日：Kongqueror2003年1月7日：Safari2008年9月2日：Chrome 故事原文地址","categories":[],"tags":[{"name":"网络协议","slug":"网络协议","permalink":"http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"}]},{"title":"公司分享1 -计算机网络","slug":"公司分享1-计算机网络","date":"2020-08-08T15:38:17.000Z","updated":"2020-08-12T07:09:34.863Z","comments":true,"path":"/","link":"","permalink":"http://yoursite.com/","excerpt":"","text":"计算机网络协议 1 总览1221","categories":[],"tags":[{"name":"计算机网络协议","slug":"计算机网络协议","permalink":"http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"}]}],"categories":[],"tags":[{"name":"网络协议","slug":"网络协议","permalink":"http://yoursite.com/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"},{"name":"计算机网络协议","slug":"计算机网络协议","permalink":"http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"}]}